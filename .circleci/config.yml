# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

commands:
   # Exercise - Rollback
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
           # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

# Define a job to be invoked later in a workflow to create a Cloud Formation project from the template.
# Define a job to be invoked later in a workflow to create an Ansible Playbook.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
        
        # - run: return 1
        # - destroy_environment
        #   when: on_fail

  # # Exercise: Smoke Testing
  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      - run:
          name: Test Job
            # Fail the job intentionally to simulate an error
          command: return 1   
      - destroy_environment

  # smoke_test:
  #   docker:
  #     - image: alpine:latest
  #   steps:
  #     - run: apk add --update curl
  #     - run:
  #         name: smoke test
  #         command: |
  #           URL="https://blog.udacity.com/"
  #           # Test if website exists
  #           if curl -s --head ${URL} 
  #           then
  #             return 0
  #           else
  #             return 1
  #           fi
  #     - destroy_environment
         
  # configure_infrastructure: 
  #   docker:
  #     - image: python:3.7-alpine3.11
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints: ["cc:75:1a:c8:04:e1:95:2d:1c:75:8a:cd:09:42:7d:4b"] # You can get this ID in the section where you registered the SSH Key
  #     - run:
  #         name: Install dependencies
  #         command: |
  #           # install the dependencies needed for your playbook
  #           apk add --update ansible 
  #     - run:
  #         name: Configure server
  #         command: |
  #           ansible-playbook -i inventory.txt main.yml
  
workflows:
  my_workflow:
      jobs:
        - smoke_test
        - create_infrastructure